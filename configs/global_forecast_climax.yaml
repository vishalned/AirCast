seed_everything: 42

# ---------------------------- TRAINER -------------------------------------------
trainer:
  default_root_dir: ${oc.env:OUTPUT_DIR,/mnt/beegfs/fahad.khan/vishal/climaX-air-pollution/global_forecast/test}
  #default_root_dir: /mnt/beegfs/fahad.khan/vishal/climaX-air-pollution/global_forecast_climax

  precision: 16

  gpus: null
  num_nodes: 1
  accelerator: gpu
  # strategy: ddp
  strategy: ddp

  min_epochs: 1
  max_epochs: 50
  enable_progress_bar: true

  sync_batchnorm: True
  enable_checkpointing: True
  resume_from_checkpoint: null

  # debugging
  fast_dev_run: false

  logger:
    class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    init_args:
      save_dir: ${trainer.default_root_dir}/logs
      #save_dir: /mnt/beegfs/fahad.khan/vishal/climaX-air-pollution/global_forecast_climax/logs
      name: null
      version: null
      log_graph: False
      default_hp_metric: True
      prefix: ""

  callbacks:
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"

    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: "${trainer.default_root_dir}/checkpoints"
        #dirpath: "/mnt/beegfs/fahad.khan/vishal/climaX-air-pollution/global_forecast_climax/checkpoints"
        monitor: "val/w_rmse" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        save_top_k: 1 # save k best models (determined by above metric)
        save_last: True # additionaly always save model from last epoch
        verbose: False
        filename: "epoch_{epoch:03d}"
        auto_insert_metric_name: False

    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: "val/w_rmse" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        patience: 5 # how many validation epochs of not improving until training stops
        min_delta: 0. # minimum change in the monitored metric needed to qualify as an improvement

    - class_path: pytorch_lightning.callbacks.RichModelSummary
      init_args:
        max_depth: -1

    - class_path: pytorch_lightning.callbacks.RichProgressBar

# ---------------------------- MODEL -------------------------------------------
model:
  lr: 5e-4
  beta_1: 0.9
  beta_2: 0.99
  weight_decay: 1e-5
  warmup_epochs: 10000
  max_epochs: 100000
  warmup_start_lr: 1e-8
  eta_min: 1e-8
  pretrained_path: "https://huggingface.co/tungnd/climax/resolve/main/5.625deg.ckpt"
  
  # --- lora parameters ---
  peft_lora: False 
  r: 8 # lora rank
  target_modules: ".*\\.attn.qkv" # regex for all attention query linear modules
  modules_to_save: ["head"]

  net:
    class_path: climax.arch.ClimaX
    init_args:
      default_vars: [
          "land_sea_mask",
          "orography",
          "lattitude",
          "2m_temperature",
          "10m_u_component_of_wind",
          "10m_v_component_of_wind",
          "geopotential_50",
          "geopotential_250",
          "geopotential_500",
          "geopotential_600",
          "geopotential_700",
          "geopotential_850",
          "geopotential_925",
          "u_component_of_wind_50",
          "u_component_of_wind_250",
          "u_component_of_wind_500",
          "u_component_of_wind_600",
          "u_component_of_wind_700",
          "u_component_of_wind_850",
          "u_component_of_wind_925",
          "v_component_of_wind_50",
          "v_component_of_wind_250",
          "v_component_of_wind_500",
          "v_component_of_wind_600",
          "v_component_of_wind_700",
          "v_component_of_wind_850",
          "v_component_of_wind_925",
          "temperature_50",
          "temperature_250",
          "temperature_500",
          "temperature_600",
          "temperature_700",
          "temperature_850",
          "temperature_925",
          "relative_humidity_50",
          "relative_humidity_250",
          "relative_humidity_500",
          "relative_humidity_600",
          "relative_humidity_700",
          "relative_humidity_850",
          "relative_humidity_925",
          "specific_humidity_50",
          "specific_humidity_250",
          "specific_humidity_500",
          "specific_humidity_600",
          "specific_humidity_700",
          "specific_humidity_850",
          "specific_humidity_925",
          "pm2p5" # 49 total variables including pm2p5
        ]
      img_size: [32, 64]
      patch_size: 2
      embed_dim: 1024
      depth: 8
      decoder_depth: 2
      num_heads: 16
      mlp_ratio: 4
      drop_path: 0.1
      drop_rate: 0.1
      freeze_encoder: False

# ---------------------------- DATA -------------------------------------------
data:
  root_dir: ../data/pm2p5_era5_np_8shards/
  variables: [
      "land_sea_mask",
      "orography",
      "lattitude",
      "2m_temperature",
      "10m_u_component_of_wind",
      "10m_v_component_of_wind",
      "geopotential_50",
      "geopotential_250",
      "geopotential_500",
      "geopotential_600",
      "geopotential_700",
      "geopotential_850",
      "geopotential_925",
      "u_component_of_wind_50",
      "u_component_of_wind_250",
      "u_component_of_wind_500",
      "u_component_of_wind_600",
      "u_component_of_wind_700",
      "u_component_of_wind_850",
      "u_component_of_wind_925",
      "v_component_of_wind_50",
      "v_component_of_wind_250",
      "v_component_of_wind_500",
      "v_component_of_wind_600",
      "v_component_of_wind_700",
      "v_component_of_wind_850",
      "v_component_of_wind_925",
      "temperature_50",
      "temperature_250",
      "temperature_500",
      "temperature_600",
      "temperature_700",
      "temperature_850",
      "temperature_925",
      "relative_humidity_50",
      "relative_humidity_250",
      "relative_humidity_500",
      "relative_humidity_600",
      "relative_humidity_700",
      "relative_humidity_850",
      "relative_humidity_925",
      "specific_humidity_50",
      "specific_humidity_250",
      "specific_humidity_500",
      "specific_humidity_600",
      "specific_humidity_700",
      "specific_humidity_850",
      "specific_humidity_925",
      "pm2p5"
    ]
  out_variables: ["relative_humidity_850", "specific_humidity_850", "geopotential_500", "temperature_850", "2m_temperature", "10m_u_component_of_wind", "10m_v_component_of_wind", "pm2p5"]
  predict_range: 24 # in this code it seems like predict range 2 implies 2 indices hence in our case since the data is every
                   # 3 hours, this means 72 hour range.
  hrs_each_step: 3 # changed to 3 from 1
  buffer_size: 10000
  batch_size: 128
  num_workers: 1
  pin_memory: False
